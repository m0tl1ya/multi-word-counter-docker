{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/WordCounterHeader.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport IconButton from 'material-ui/IconButton';\nimport ClearIcon from 'material-ui-icons/Clear'; // import { blueGrey } from 'material-ui/colors';\n\nimport Switch from 'material-ui/Switch';\n\nconst styles = theme => ({\n  button: {\n    top: '0.0em',\n    marginLeft: theme.spacing.unit * 7\n  }\n});\n\nclass WordCounterHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: this.props.onActive\n    }; // this.handleSwitch = this.handleSwitch.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      checked: nextProps.onActive\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          id = _this$props.id,\n          words = _this$props.words,\n          characters = _this$props.characters,\n          textLength = _this$props.textLength,\n          switchCount = _this$props.switchCount,\n          deleteCounter = _this$props.deleteCounter,\n          displayMode = _this$props.displayMode;\n    let element;\n\n    if (displayMode.mode === 'Words') {\n      if (words > 0) {\n        element = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, words, \" words\");\n      } else {\n        element = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, words, \" word\");\n      }\n    }\n\n    if (displayMode.mode === 'Characters') {\n      if (characters > 0) {\n        element = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, characters, \" characters\");\n      } else {\n        element = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, characters, \" character\");\n      }\n    }\n\n    if (displayMode.mode === 'Characters including space') {\n      if (textLength > 0) {\n        element = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, textLength, \" characters\");\n      } else {\n        element = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, textLength, \" character\");\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"CounterHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, element, React.createElement(Switch, {\n      checked: this.props.onActive,\n      onChange: () => switchCount(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      className: classes.deleteButton,\n      \"aria-label\": \"Delete\",\n      onClick: () => deleteCounter(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ClearIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nWordCounterHeader.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  id: PropTypes.number.isRequired,\n  words: PropTypes.number.isRequired,\n  characters: PropTypes.number.isRequired,\n  textLength: PropTypes.number.isRequired,\n  deleteCounter: PropTypes.func.isRequired,\n  switchCount: PropTypes.func.isRequired,\n  onActive: PropTypes.bool.isRequired,\n  displayMode: PropTypes.objectOf.isRequired\n};\nexport default withStyles(styles)(WordCounterHeader);","map":{"version":3,"sources":["/usr/src/app/src/components/WordCounterHeader.js"],"names":["React","Component","PropTypes","withStyles","IconButton","ClearIcon","Switch","styles","theme","button","top","marginLeft","spacing","unit","WordCounterHeader","constructor","props","state","checked","onActive","componentWillReceiveProps","nextProps","setState","render","classes","id","words","characters","textLength","switchCount","deleteCounter","displayMode","element","mode","deleteButton","propTypes","objectOf","isRequired","number","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport IconButton from 'material-ui/IconButton';\nimport ClearIcon from 'material-ui-icons/Clear';\n// import { blueGrey } from 'material-ui/colors';\nimport Switch from 'material-ui/Switch';\n\n\nconst styles = theme => ({\n  button: {\n    top: '0.0em',\n    marginLeft: theme.spacing.unit * 7,\n  },\n});\n\n\nclass WordCounterHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: this.props.onActive,\n    };\n    // this.handleSwitch = this.handleSwitch.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ checked: nextProps.onActive });\n  }\n\n  render() {\n    const {\n      classes,\n      id,\n      words,\n      characters,\n      textLength,\n      switchCount,\n      deleteCounter,\n      displayMode,\n    } = this.props;\n\n    let element;\n    if (displayMode.mode === 'Words') {\n      if (words > 0) {\n        element = (\n          <span>\n            {words} words\n          </span>\n        );\n      } else {\n        element = (\n          <span>\n            {words} word\n          </span>\n        );\n      }\n    }\n    if (displayMode.mode === 'Characters') {\n      if (characters > 0) {\n        element = (\n          <span>\n            {characters} characters\n          </span>\n        );\n      } else {\n        element = (\n          <span>\n            {characters} character\n          </span>\n        );\n      }\n    }\n    if (displayMode.mode === 'Characters including space') {\n      if (textLength > 0) {\n        element = (\n          <span>\n            {textLength} characters\n          </span>\n        );\n      } else {\n        element = (\n          <span>\n            {textLength} character\n          </span>\n        );\n      }\n    }\n    return (\n      <div className=\"CounterHeader\">\n        {element}\n        <Switch\n          checked={this.props.onActive}\n          onChange={() => switchCount()}\n        />\n        <IconButton\n          className={classes.deleteButton}\n          aria-label=\"Delete\"\n          onClick={() => deleteCounter(id)}\n        >\n          <ClearIcon />\n        </IconButton>\n\n      </div>\n    );\n  }\n}\n\nWordCounterHeader.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  id: PropTypes.number.isRequired,\n  words: PropTypes.number.isRequired,\n  characters: PropTypes.number.isRequired,\n  textLength: PropTypes.number.isRequired,\n  deleteCounter: PropTypes.func.isRequired,\n  switchCount: PropTypes.func.isRequired,\n  onActive: PropTypes.bool.isRequired,\n  displayMode: PropTypes.objectOf.isRequired,\n};\n\nexport default withStyles(styles)(WordCounterHeader);\n"]},"metadata":{},"sourceType":"module"}