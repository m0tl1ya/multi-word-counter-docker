{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/CountingZone.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Refresh from '@material-ui/icons/Refresh';\nimport WordCounter from './WordCounter';\n\nconst styles = theme => ({\n  container: {\n    margin: '1em'\n  },\n  refreshButton: {\n    color: 'white',\n    // backgroundColor: '#2196F3',\n    background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\n    position: 'fixed',\n    bottom: theme.spacing.unit * 12,\n    right: theme.spacing.unit * 2\n  },\n  addButton: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2\n  }\n});\n\nclass CountingZone extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          counters = _this$props.counters,\n          actions = _this$props.actions,\n          mode = _this$props.mode; // console.log(filteredParameters);\n\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, counters.map(counter => React.createElement(WordCounter, {\n      counter: counter,\n      actions: actions,\n      mode: mode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"fab\",\n      color: \"primary\",\n      className: classes.refreshButton,\n      onClick: actions.refresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Refresh, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"fab\",\n      color: \"secondary\",\n      className: classes.addButton,\n      onClick: actions.addCounterBelow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCountingZone.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  counters: PropTypes.arrayOf.isRequired,\n  actions: PropTypes.objectOf.isRequired,\n  mode: PropTypes.objectOf.isRequired\n};\nexport default withStyles(styles)(CountingZone);","map":{"version":3,"sources":["/usr/src/app/src/components/CountingZone.js"],"names":["React","Component","PropTypes","withStyles","Button","AddIcon","Refresh","WordCounter","styles","theme","container","margin","refreshButton","color","background","boxShadow","position","bottom","spacing","unit","right","addButton","CountingZone","constructor","props","render","classes","counters","actions","mode","map","counter","refresh","addCounterBelow","propTypes","objectOf","isRequired","arrayOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Refresh from '@material-ui/icons/Refresh';\n\nimport WordCounter from './WordCounter';\n\n\nconst styles = theme => ({\n  container: {\n    margin: '1em',\n  },\n  refreshButton: {\n    color: 'white',\n    // backgroundColor: '#2196F3',\n    background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\n    position: 'fixed',\n    bottom: theme.spacing.unit * 12,\n    right: theme.spacing.unit * 2,\n  },\n  addButton: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n});\n\nclass CountingZone extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { classes, counters, actions, mode } = this.props;\n    // console.log(filteredParameters);\n    return (\n      <div className={classes.container}>\n        {counters.map(counter =>\n          <WordCounter\n            counter={counter}\n            actions={actions}\n            mode={mode}\n          />)}\n        <Button\n          variant=\"fab\"\n          color=\"primary\"\n          className={classes.refreshButton}\n          onClick={actions.refresh}\n        >\n          <Refresh />\n        </Button>\n        <Button\n          variant=\"fab\"\n          color=\"secondary\"\n          className={classes.addButton}\n          onClick={actions.addCounterBelow}\n        >\n          <AddIcon />\n        </Button>\n      </div>\n    );\n  }\n}\n\nCountingZone.propTypes = {\n  classes: PropTypes.objectOf.isRequired,\n  counters: PropTypes.arrayOf.isRequired,\n  actions: PropTypes.objectOf.isRequired,\n  mode: PropTypes.objectOf.isRequired,\n};\n\nexport default withStyles(styles)(CountingZone);\n"]},"metadata":{},"sourceType":"module"}